---
import Layout from '@/layouts/Layout.astro'
import { experiences, education, skills, publications, projects, awards, otherExperiences } from '../data/cv'
import CvTimeline from '@/components/ui/CvTimeline.astro'

import type { Experience, Education, Publication } from '../types/cv'
import List from '@/components/ui/List.astro'
import PublicationsList from '@/components/ui/PublicationsList.astro'
import ProjectCard from '@/components/ui/ProjectCard.astro'
import TextListItem from '@/components/ui/TextListItem.astro'
import SectionNav from '@/components/ui/SectionNav.astro'

let orderdExperiences: Experience[] = []
let orderdEducations: Education[] = []
let orderedPublications: Publication[] = []

const orderElement = <T extends { time: string }>(a: T, b: T) => {
  const presentValues = ['present', 'now', 'current', 'today']
  if (
			presentValues.includes(
				(a['time'] as string)?.split(' - ')[1]?.toLowerCase()
			)
		) {
			// If the date is 'present', it should be the first element
			return -1
		}
		const dateA = new Date((a['time'] as string)?.split(' - ')[1])
		const dateB = new Date((b['time'] as string)?.split(' - ')[1])
		return dateB.getTime() - dateA.getTime()
}

if (experiences.length > 0) {
	orderdExperiences = experiences.sort((a, b) => {
		return orderElement(a, b)
	})
}

if (education.length > 0) {
	orderdEducations = education.sort((a, b) => {
		return orderElement(a, b)
	})
}

if (publications.length > 0) {
	orderedPublications = publications.sort((a, b) => {
		return orderElement(a, b)
	})
}

// 섹션 정의
const sections = [
  { id: "education", title: "Education" },
  { id: "experiences", title: "Experiences" },
  { id: "projects", title: "Projects" },
  { id: "awards", title: "Awards & Honors" },
  { id: "other-experiences", title: "Other Experiences" },
  { id: "skills", title: "Skills" }
];
---

<Layout title="CV | Kangbeen Ko">
	<SectionNav sections={sections} />
	
	{
		orderdEducations.length > 0 && (
			<section id="education" class='mb-12 scroll-mt-16'>
				<h2 class='text-2xl font-bold mb-6 border-b pb-2'>
					<a href="#education" class="hover:text-accent">Education</a>
				</h2>
				<CvTimeline elements={orderdEducations} colored={true} />
			</section>
		)
	}

	{
		orderdExperiences.length > 0 && (
			<section id="experiences" class='mb-12 scroll-mt-16'>
				<h2 class='text-2xl font-bold mb-6 border-b pb-2'>
					<a href="#experiences" class="hover:text-accent">Experiences</a>
				</h2>
				<CvTimeline elements={orderdExperiences} colored={true} />
			</section>
		)
	}

	{
		projects.length > 0 && (
			<section id="projects" class='mb-12 scroll-mt-16'>
				<h2 class='text-2xl font-bold mb-6 border-b pb-2'>
					<a href="#projects" class="hover:text-accent">Projects</a>
				</h2>
				<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
					{projects.map(project => (
						<ProjectCard project={project} />
					))}
				</div>
			</section>
		)
	}

	{
		awards.length > 0 && (
			<section id="awards" class='mb-12 scroll-mt-16'>
				<h2 class='text-2xl font-bold mb-6 border-b pb-2'>
					<a href="#awards" class="hover:text-accent">Awards & Honors</a>
				</h2>
				<div class="mt-6">
					{awards.map(award => (
						<TextListItem item={award} />
					))}
				</div>
			</section>
		)
	}

	{
		otherExperiences.length > 0 && (
			<section id="other-experiences" class='mb-12 scroll-mt-16'>
				<h2 class='text-2xl font-bold mb-6 border-b pb-2'>
					<a href="#other-experiences" class="hover:text-accent">Other Experiences</a>
				</h2>
				<div class="mt-6">
					{otherExperiences.map(exp => (
						<TextListItem item={exp} />
					))}
				</div>
			</section>
		)
	}
	{
		skills.length > 0 && (
			<section id="skills" class='mb-12 scroll-mt-16'>
				<h2 class='text-2xl font-bold mb-6 border-b pb-2'>
					<a href="#skills" class="hover:text-accent">Skills</a>
				</h2>
				<List listItems={skills}/>
			</section>
		)
	}
</Layout>
