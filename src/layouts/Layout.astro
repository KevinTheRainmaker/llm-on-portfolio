---
import { ClientRouter } from 'astro:transitions';
import SpeedInsights from "@vercel/speed-insights/astro";

import BetterIcon from '../components/ui/BetterIcon.astro'
import DarkLightController from '../components/ui/DarkLightController.astro'
import Navbar from '../components/ui/Navbar.astro'
import Head from '../components/Head.astro'

import { seo, profile, template } from '../settings'
import Footer from '../components/ui/Footer.astro'

type Props = {
	title?: string
	description?: string
	image?: string
}

const {
	title = seo.default_title,
	description = seo.default_description,
	image = seo.default_image,
} = Astro.props
---

<!doctype html>
<html lang='en'>
	<head>
		{template.transitions && <ClientRouter /> }

		<Head title={title} description={description} image={image} />

		<!-- 모바일 디바이스 감지 및 리다이렉트 -->
		<script is:inline>
			// 현재 페이지가 모바일 페이지인지 확인
			const isMobilePage = window.location.pathname === '/mobile';
			
			// 모바일 디바이스 감지 함수
			function isMobileDevice() {
				return (window.innerWidth <= 768) || 
					(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));
			}
			
			// 모바일 디바이스이면서 모바일 페이지가 아닐 경우 리다이렉트
			if (isMobileDevice() && !isMobilePage) {
				window.location.href = '/mobile';
			}
			
			// 데스크톱에서 모바일 페이지 접근 시 메인 페이지로 리다이렉트
			if (!isMobileDevice() && isMobilePage) {
				window.location.href = '/';
			}
		</script>
		<!-- 모바일 버전 준비 중 -->

	</head>
	<body>
		<div class={`bg-base-100 drawer lg:drawer-open ${template.menu_left ? 'drawer-end' : ''}`}>
			<input id='my-drawer' type='checkbox' class='drawer-toggle' />
			<!-- Drawer content -->
            <div class='drawer-content bg-base-100'>
				<div class='bg-base-100 z-50 text-base-content shadow-sm'>
					<nav class='navbar'>
						<div class='navbar-start'>
							{template.menu_left &&
								<DarkLightController/>
							}
							<label for='my-drawer' class='btn btn-square btn-ghost lg:hidden'>
								<BetterIcon>
									<svg
										xmlns='http://www.w3.org/2000/svg'
										fill='none'
										viewBox='0 0 24 24'
										stroke-width='1.5'
										class='size-6 stroke-current'
									>
										<path
											stroke-linecap='round'
											stroke-linejoin='round'
											d='M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5'></path>
									</svg>
								</BetterIcon>
							</label>
						</div>
						<div class='navbar-center lg:hidden text-lg font-black'>
							{profile.title}
							{profile.fullName}
						</div>
						<div class='navbar-end'>
							{!template.menu_left &&
								<DarkLightController/>
							}
						</div>
					</nav>
				</div>
                <main class='p-8 pt-10 lg:pt-16 lg:max-w-5xl max-w-full mx-auto min-h-screen flex flex-col justify-between'>
					<!-- Page content -->
					<slot />
				<Footer />
				</main>
				
				<!-- 최상단으로 이동하는 플로팅 버튼 -->
				<button id="scrollToTopBtn" class="fixed bottom-6 right-6 size-12 rounded-full bg-accent text-white shadow-lg flex items-center justify-center opacity-0 transition-opacity duration-300 z-50 hover:bg-accent-focus">
					<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
					</svg>
				</button>
			</div>
			<!-- Drawer side -->
			<div class='drawer-side z-40'>
				<label for='my-drawer' aria-label='close sidebar' class='drawer-overlay'
				></label>
				<Navbar />
			</div>
		</div>
		
		<!-- Vercel Speed Insights -->
		<SpeedInsights />
		
		<script is:inline>
			// 스크롤 투 탑 버튼 초기화 함수
			function initScrollToTopButton() {
				const scrollToTopBtn = document.getElementById('scrollToTopBtn');
				
				if (!scrollToTopBtn) return; // 버튼이 없으면 종료
				
				const scrollFunction = () => {
					if (document.body.scrollTop > 300 || document.documentElement.scrollTop > 300) {
						scrollToTopBtn.classList.remove('opacity-0');
						scrollToTopBtn.classList.add('opacity-100');
					} else {
						scrollToTopBtn.classList.remove('opacity-100');
						scrollToTopBtn.classList.add('opacity-0');
					}
				};
				
				// 초기 스크롤 위치에 따라 버튼 표시 여부 결정
				scrollFunction();
				
				// 스크롤 이벤트 리스너 추가
				window.addEventListener('scroll', scrollFunction);
				
				// 클릭 이벤트 리스너 추가
				scrollToTopBtn.addEventListener('click', () => {
					window.scrollTo({
						top: 0,
						behavior: 'smooth'
					});
				});
			}
			
			// 페이지 로드 시 초기화
			document.addEventListener('DOMContentLoaded', initScrollToTopButton);
			
			// Astro View Transitions 지원
			document.addEventListener('astro:page-load', initScrollToTopButton);
			document.addEventListener('astro:after-swap', initScrollToTopButton);
		</script>
	</body>
</html>

<style is:global>
	@media (prefers-color-scheme: dark) {
		:root {
			--my-color: #252b30;
		}
	}
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
	
	/* 채팅 메시지 애니메이션 */
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  @keyframes typing {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-0.5rem); }
  }
  
  /* 스크롤 투 탑 버튼 애니메이션 */
  #scrollToTopBtn {
    transition: opacity 0.3s, transform 0.3s;
  }
  
  #scrollToTopBtn:hover {
    transform: translateY(-5px);
  }
</style>
